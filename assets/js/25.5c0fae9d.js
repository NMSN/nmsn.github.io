(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{303:function(t,a,s){"use strict";s.r(a);var r=s(19),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"了不起的node-js"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#了不起的node-js"}},[t._v("#")]),t._v(" 了不起的Node.js")]),t._v(" "),s("h2",{attrs:{id:"_1-安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-安装"}},[t._v("#")]),t._v(" 1 安装")]),t._v(" "),s("h3",{attrs:{id:"_1-1"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1"}},[t._v("#")]),t._v(" 1.1")]),t._v(" "),s("p",[t._v("npm search 根据name/tags/description搜索模块")]),t._v(" "),s("p",[t._v("npm view 查看模块相关属性")]),t._v(" "),s("h2",{attrs:{id:"_2-javascript概览"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-javascript概览"}},[t._v("#")]),t._v(" 2 JavaScript概览")]),t._v(" "),s("h2",{attrs:{id:"_3-阻塞与非阻塞io"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-阻塞与非阻塞io"}},[t._v("#")]),t._v(" 3 阻塞与非阻塞IO")]),t._v(" "),s("h3",{attrs:{id:"堆栈追踪"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#堆栈追踪"}},[t._v("#")]),t._v(" 堆栈追踪")]),t._v(" "),s("p",[t._v("要捕获一个未来才会执行到的函数所抛出的错误是不可能的。这会直接抛出未捕获的一场，并且catch代码块永远都不会被执行")]),t._v(" "),s("h2",{attrs:{id:"_4-node中的javascript"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-node中的javascript"}},[t._v("#")]),t._v(" 4 Node中的JavaScript")]),t._v(" "),s("h3",{attrs:{id:"global对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#global对象"}},[t._v("#")]),t._v(" global对象")]),t._v(" "),s("p",[t._v("在浏览器中，全局对象指的就是window对象。在window对象上定义的任何内容都可以被全局访问到。")]),t._v(" "),s("p",[t._v("Node中有两个类似但却各自代表着不同含义的对象")]),t._v(" "),s("ul",[s("li",[t._v("global: 和window一样，任何global对象上的属性都可以被全局访问到")]),t._v(" "),s("li",[t._v("process: 所有全局执行上下文中的内容都在process对象中")])]),t._v(" "),s("h2",{attrs:{id:"_5命令行工具（cli）以及fs-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5命令行工具（cli）以及fs-api"}},[t._v("#")]),t._v(" 5命令行工具（CLI）以及FS API")]),t._v(" "),s("h3",{attrs:{id:"创建模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建模块"}},[t._v("#")]),t._v(" 创建模块")]),t._v(" "),s("p",[t._v("npm最寻一个名为semver的版本控制标准")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://semver.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://semver.org/"),s("OutboundLink")],1)]),t._v(" "),s("h3",{attrs:{id:"理解什么是流（stream）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#理解什么是流（stream）"}},[t._v("#")]),t._v(" 理解什么是流（stream）")]),t._v(" "),s("p",[t._v("process全局对象中包含了三个流对象，分别对应三个UNIX标准流:")]),t._v(" "),s("ul",[s("li",[t._v("stdin 标准输入")]),t._v(" "),s("li",[t._v("stdout 标准输出")]),t._v(" "),s("li",[t._v("stderr 标准错误")])]),t._v(" "),s("p",[t._v("流的另一个属性是它默认的编码。如果在流上设置了编码，那么会得到编码后的字符串（utf-8、ascii等）而不是原始的Buffer作为事件参数")]),t._v(" "),s("h4",{attrs:{id:"输入和输出"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#输入和输出"}},[t._v("#")]),t._v(" 输入和输出")]),t._v(" "),s("p",[t._v("process.stdout.write()\nprocess.stdin.resume()\nprocess.stdin.setEncoding('utf8')")]),t._v(" "),s("h4",{attrs:{id:"对cli一探究竟"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对cli一探究竟"}},[t._v("#")]),t._v(" 对CLI一探究竟")]),t._v(" "),s("p",[t._v("process.argv包含了所有Node程序运行时的参数值")]),t._v(" "),s("p",[t._v("第一个元素始终是node，第二个元素始终是执行的文件路径。紧接着是命令行后紧跟着的参数")]),t._v(" "),s("h4",{attrs:{id:"工作目录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#工作目录"}},[t._v("#")]),t._v(" 工作目录")]),t._v(" "),s("p",[t._v("__dirname 获取执行文件时该文件在文件系统中所在的目录")]),t._v(" "),s("p",[t._v("process.cwd 获取当前工作目录")]),t._v(" "),s("p",[t._v("process.chdir 更改工作目录")]),t._v(" "),s("h4",{attrs:{id:"环境变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#环境变量"}},[t._v("#")]),t._v(" 环境变量")]),t._v(" "),s("p",[t._v("Node允许通过process.env变量来轻松访问shell环境下的变量")]),t._v(" "),s("h4",{attrs:{id:"退出"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#退出"}},[t._v("#")]),t._v(" 退出")]),t._v(" "),s("p",[t._v("process.exit 使应用退出")]),t._v(" "),s("h4",{attrs:{id:"ansi转义码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ansi转义码"}},[t._v("#")]),t._v(" ANSI转义码")]),t._v(" "),s("p",[t._v("要在文本终端下控制格式、颜色以及其他输出选项，可以使用ANSI转义码\n在文本周围添加的明显不用于输出的字符，被称为非打印字符")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\033[90m'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("g"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'   $1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\033[39m'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[t._v("\\033 表示转义序列的卡是")]),t._v(" "),s("li",[t._v("[表示开始颜色设置")]),t._v(" "),s("li",[t._v("90表示前景色为亮灰色")]),t._v(" "),s("li",[t._v("m表示颜色设置结束")])]),t._v(" "),s("h2",{attrs:{id:"tcp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tcp"}},[t._v("#")]),t._v(" TCP")]),t._v(" "),s("p",[t._v("传输控制协议（TCP）是一个面向连接的协议，它保证了两台计算机之间数据传输的可靠性和顺序")]),t._v(" "),s("p",[t._v("Node HTTP服务器是构建与Node TCP服务器之上的。从变成角度来说，也就是Node中的http.Server继承自net.Server(net是TCP模块)")]),t._v(" "),s("h3",{attrs:{id:"tcp有哪些特征"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tcp有哪些特征"}},[t._v("#")]),t._v(" TCP有哪些特征")]),t._v(" "),s("h4",{attrs:{id:"面向连接的通信和保证顺序的传递"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#面向连接的通信和保证顺序的传递"}},[t._v("#")]),t._v(" 面向连接的通信和保证顺序的传递")]),t._v(" "),s("p",[t._v("IP是基于数据报的传输。这些数据报时独立进行传输的，送达的顺序也是无序的")]),t._v(" "),s("p",[t._v("当在TCP连接内进行数据传递时，发送的IP数据包包含了标识该连接以及数据流顺序的信息")]),t._v(" "),s("h4",{attrs:{id:"面向字节"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#面向字节"}},[t._v("#")]),t._v(" 面向字节")]),t._v(" "),s("p",[t._v("TCP对字符以及字符编码是完全无知的，不同的编码会导致传输的字节数不同，所以，TCP允许数据以ASCII字符（每个字符一个字节）或者Unicode（每个字符四个字节）进行传输。")]),t._v(" "),s("p",[t._v("正因为对消息格式没有严格的约束，使得TCP有很好的灵活性")]),t._v(" "),s("h4",{attrs:{id:"可靠性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#可靠性"}},[t._v("#")]),t._v(" 可靠性")]),t._v(" "),s("p",[t._v("由于TCP时基于底层不可靠的服务，因此，它必须要基于确认和超时实现一系列的机制来达到可靠性的要求")]),t._v(" "),s("p",[t._v("当数据发送出去后，发送方就会等待一个确认消息。如果过了指定的窗口事件，还未收到确认消息，发送方就会对数据进行重发")]),t._v(" "),s("h4",{attrs:{id:"流控制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#流控制"}},[t._v("#")]),t._v(" 流控制")]),t._v(" "),s("p",[t._v("TCP通过一种叫流控制的方式来确保两点之间传输数据的平衡")]),t._v(" "),s("h4",{attrs:{id:"拥堵控制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#拥堵控制"}},[t._v("#")]),t._v(" 拥堵控制")]),t._v(" "),s("h4",{attrs:{id:"telnet"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#telnet"}},[t._v("#")]),t._v(" Telnet")]),t._v(" "),s("p",[t._v("Telnet是一个早期的网络协议，旨在提供双向的虚拟终端。在SSH出现前，它作为一种控制远程计算机的方式被广泛使用，如远程服务器管理。它是TCP协议上层的协议")]),t._v(" "),s("h2",{attrs:{id:"http"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http"}},[t._v("#")]),t._v(" HTTP")]),t._v(" "),s("p",[t._v("超文本传输协议")]),t._v(" "),s("h3",{attrs:{id:"头信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#头信息"}},[t._v("#")]),t._v(" 头信息")]),t._v(" "),s("h3",{attrs:{id:"连接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#连接"}},[t._v("#")]),t._v(" 连接")]),t._v(" "),s("h2",{attrs:{id:"_8-connect"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-connect"}},[t._v("#")]),t._v(" 8 Connect")]),t._v(" "),s("p",[t._v("Connect是一个基于HTTP服务器的工具集，它提供了一种新的组织代码的方式来与请求、相应对象进行交互，称为中间件")]),t._v(" "),s("p",[t._v("简单来哦说，中间件由幻术组成，它除了处理req和res对象外，还接受一个next函数来做流控制")]),t._v(" "),s("h3",{attrs:{id:"static中间件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#static中间件"}},[t._v("#")]),t._v(" static中间件")]),t._v(" "),s("p",[t._v("Connect允许中间件挂载到URL上。比如。static允许将任意一个URL匹配到文件系统中任意一个目录")]),t._v(" "),s("h3",{attrs:{id:"query中间件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#query中间件"}},[t._v("#")]),t._v(" query中间件")]),t._v(" "),s("p",[t._v("使用query中间件，就能够通过req.query对象自动获取查询字符串数据")]),t._v(" "),s("h3",{attrs:{id:"logger中间件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#logger中间件"}},[t._v("#")]),t._v(" logger中间件")]),t._v(" "),s("p",[t._v("logger中间件是一个对Web应用非常有用的诊断工具。它将发送过来的请求信息和发送出去的相应信息打印在终端")]),t._v(" "),s("p",[t._v("提供四种日志格式")]),t._v(" "),s("ul",[s("li",[t._v("default")]),t._v(" "),s("li",[t._v("dev")]),t._v(" "),s("li",[t._v("short")]),t._v(" "),s("li",[t._v("tiny")])]),t._v(" "),s("p",[t._v("logger中间允许自定义日志输出格式")]),t._v(" "),s("p",[t._v("下面是完整的可用token")]),t._v(" "),s("ul",[s("li",[t._v("：req[header]")]),t._v(" "),s("li",[t._v(":res[header]")]),t._v(" "),s("li",[t._v(":http-version")]),t._v(" "),s("li",[t._v("response-time")]),t._v(" "),s("li",[t._v("remote-addr")]),t._v(" "),s("li",[t._v("date")]),t._v(" "),s("li",[t._v("method")]),t._v(" "),s("li",[t._v("url")]),t._v(" "),s("li",[t._v("referrer")]),t._v(" "),s("li",[t._v("user-agent")]),t._v(" "),s("li",[t._v("status")])]),t._v(" "),s("h3",{attrs:{id:"body-parser中间件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#body-parser中间件"}},[t._v("#")]),t._v(" body parser中间件")]),t._v(" "),s("h3",{attrs:{id:"cookie"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cookie"}},[t._v("#")]),t._v(" cookie")]),t._v(" "),s("h3",{attrs:{id:"session"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#session"}},[t._v("#")]),t._v(" session")]),t._v(" "),s("h3",{attrs:{id:"redis-session"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis-session"}},[t._v("#")]),t._v(" redis session")]),t._v(" "),s("p",[t._v("生产环境中，需要使用一种当应用重启后，还能够将session信息持久化存储下来的机制，如Redis")]),t._v(" "),s("h3",{attrs:{id:"methodoverride中间件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#methodoverride中间件"}},[t._v("#")]),t._v(" methodOverride中间件")]),t._v(" "),s("h3",{attrs:{id:"basicauth中间件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#basicauth中间件"}},[t._v("#")]),t._v(" basicAuth中间件")]),t._v(" "),s("h2",{attrs:{id:"_9-express"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-express"}},[t._v("#")]),t._v(" 9 Express")]),t._v(" "),s("p",[t._v("鉴于Connect基于HTTP模块提供了开发Web应用的常用的基础功能，Express基于Connect为个构建整个网站以及Web应用提供了更为方便的API")]),t._v(" "),s("h2",{attrs:{id:"_10-websocket"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-websocket"}},[t._v("#")]),t._v(" 10 WebSocket")]),t._v(" "),s("h2",{attrs:{id:"_11-socket-io"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-socket-io"}},[t._v("#")]),t._v(" 11 Socket.IO")]),t._v(" "),s("h3",{attrs:{id:"传输"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#传输"}},[t._v("#")]),t._v(" 传输")]),t._v(" "),s("p",[t._v("Socket.IO最诱人的特性之一就是消息的传递时基于传输的，而非全部依靠WebSocket，也就是说，Socket.IO可以在绝大部分的浏览器和设备上运行")]),t._v(" "),s("h3",{attrs:{id:"断开vs关闭"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#断开vs关闭"}},[t._v("#")]),t._v(" 断开VS关闭")]),t._v(" "),s("p",[t._v("Socket.IO带来的另一个基础功能就是对超时的支持")]),t._v(" "),s("h3",{attrs:{id:"事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件"}},[t._v("#")]),t._v(" 事件")]),t._v(" "),s("h3",{attrs:{id:"命名空间"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#命名空间"}},[t._v("#")]),t._v(" 命名空间")]),t._v(" "),s("p",[t._v("Socket.IO还提供了另一个强大的特性，它允许在单个连接中利用命名空间来将消息区分开来")]),t._v(" "),s("h3",{attrs:{id:"事件和广播"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件和广播"}},[t._v("#")]),t._v(" 事件和广播")]),t._v(" "),s("h2",{attrs:{id:"_12-mongodb"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-mongodb"}},[t._v("#")]),t._v(" 12 MongoDB")]),t._v(" "),s("h2",{attrs:{id:"_13-mysql"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-mysql"}},[t._v("#")]),t._v(" 13 MySql")]),t._v(" "),s("h2",{attrs:{id:"redis"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis"}},[t._v("#")]),t._v(" Redis")]),t._v(" "),s("p",[t._v("支持数据类型")]),t._v(" "),s("ul",[s("li",[t._v("字符串（String）")]),t._v(" "),s("li",[t._v("列表（list）")]),t._v(" "),s("li",[t._v("数据集（set）")]),t._v(" "),s("li",[t._v("哈希（hash）")]),t._v(" "),s("li",[t._v("有序数据集（sorted set）")])]),t._v(" "),s("h3",{attrs:{id:"_15-代码共享"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-代码共享"}},[t._v("#")]),t._v(" 15 代码共享")]),t._v(" "),s("h3",{attrs:{id:"_16-测试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_16-测试"}},[t._v("#")]),t._v(" 16 测试")])])}),[],!1,null,null,null);a.default=e.exports}}]);